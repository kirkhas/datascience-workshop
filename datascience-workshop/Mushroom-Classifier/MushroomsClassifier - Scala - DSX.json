{"paragraphs":[{"text":"%md\n\n## Data Science in Apache Spark\n### Mushrooms Workbook\n#### Random Forest Classifier\n\n**Level**: Moderate\n**Language**: Scala\n**Requirements**: \n- Spark 2.x\n\n**Author**: Ian Brooks\n**Follow** [LinkedIn - Ian Brooks PhD] (https://www.linkedin.com/in/ianrbrooksphd/)\n\nWhat would Bear do?  \n![alt text][logo]\n\n[logo]:https://static.thenortheasttoday.com/wp-content/uploads/2016/12/BearGrylls-800x445.png\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Data Science in Apache Spark</h2>\n<h3>Mushrooms Workbook</h3>\n<h4>Random Forest Classifier</h4>\n<p><strong>Level</strong>: Moderate<br/><strong>Language</strong>: Scala<br/><strong>Requirements</strong>:<br/>- Spark 2.x</p>\n<p><strong>Author</strong>: Ian Brooks<br/><strong>Follow</strong> <a href=\"https://www.linkedin.com/in/ianrbrooksphd/\">LinkedIn - Ian Brooks PhD</a></p>\n<p>What would Bear do?<br/><img src=\"https://static.thenortheasttoday.com/wp-content/uploads/2016/12/BearGrylls-800x445.png\" alt=\"alt text\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1526391457601_-206817065","id":"20180409-123904_1018491284","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:52474"},{"title":"initialize Spark Session and Check Spark Version","text":"%spark\n\nimport org.apache.spark.sql.SparkSession\nval spark: SparkSession = SparkSession.builder\n  .appName(\"MushroomClassifier\")  // optional and will be autogenerated if not specified\n  .master(\"local[*]\")               // avoid hardcoding the deployment environment\n  .config(\"spark.sql.warehouse.dir\", \"target/spark-warehouse\")\n  .getOrCreate\n\nspark.version","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.SparkSession\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@2bc195f0\nres10: String = 2.0.2\n"}]},"apps":[],"jobName":"paragraph_1526391457602_-205662819","id":"20180409-123845_1776601428","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52475"},{"title":"Import Data Set and Create Raw View","text":"%spark\n\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.DataFrame\nimport scala.collection.mutable.ListBuffer\n\n//Create a data frame from CSV File \nval df_WholeSetRaw = spark.read.format(\"csv\").option(\"header\", \"true\").option(\"inferSchema\", \"true\").load(\"./datasets/MushroomDatabase.csv\")\n\n//Create Table from DataFrame\ndf_WholeSetRaw.createOrReplaceTempView(\"RawMushData\")\n\n//Display resulting Infered schema \ndf_WholeSetRaw.printSchema()","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.types._\nimport org.apache.spark.sql.DataFrame\nimport scala.collection.mutable.ListBuffer\ndf_WholeSetRaw: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 21 more fields]\nroot\n |-- Label: string (nullable = true)\n |-- CapShape: string (nullable = true)\n |-- CapSurface: string (nullable = true)\n |-- CapColor: string (nullable = true)\n |-- Bruises: string (nullable = true)\n |-- Odor: string (nullable = true)\n |-- GillAttachment: string (nullable = true)\n |-- GillSpacing: string (nullable = true)\n |-- GillSize: string (nullable = true)\n |-- GillColor: string (nullable = true)\n |-- StalkShape: string (nullable = true)\n |-- StalkRoot: string (nullable = true)\n |-- SSAR: string (nullable = true)\n |-- SSBR: string (nullable = true)\n |-- SCAR: string (nullable = true)\n |-- SCBR: string (nullable = true)\n |-- VeilType: string (nullable = true)\n |-- VeilColor: string (nullable = true)\n |-- RingNumber: string (nullable = true)\n |-- RingType: string (nullable = true)\n |-- SporePrintColor: string (nullable = true)\n |-- Population: string (nullable = true)\n |-- Habitat: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1526391457603_-206047568","id":"20180409-124408_494881545","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52476"},{"title":"Validate Raw Data","text":"%sql\n\nselect * from RawMushData limit 10\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Label\tCapShape\tCapSurface\tCapColor\tBruises\tOdor\tGillAttachment\tGillSpacing\tGillSize\tGillColor\tStalkShape\tStalkRoot\tSSAR\tSSBR\tSCAR\tSCBR\tVeilType\tVeilColor\tRingNumber\tRingType\tSporePrintColor\tPopulation\tHabitat\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tALMOND\tFREE\tCROWDED\tNARROW\tWHITE\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tPURPLE\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tALMOND\tFREE\tCROWDED\tNARROW\tWHITE\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBROWN\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tALMOND\tFREE\tCROWDED\tNARROW\tPINK\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tPURPLE\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tALMOND\tFREE\tCROWDED\tNARROW\tPINK\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBROWN\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tALMOND\tFREE\tCROWDED\tNARROW\tBROWN\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tPURPLE\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tALMOND\tFREE\tCROWDED\tNARROW\tBROWN\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBROWN\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tANISE\tFREE\tCROWDED\tNARROW\tWHITE\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tPURPLE\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tANISE\tFREE\tCROWDED\tNARROW\tWHITE\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBROWN\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tANISE\tFREE\tCROWDED\tNARROW\tPINK\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tPURPLE\tSEVERAL\tWOODS\nEDIBLE\tCONVEX\tSMOOTH\tWHITE\tBRUISES\tANISE\tFREE\tCROWDED\tNARROW\tPINK\tTAPERING\tBULBOUS\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBROWN\tSEVERAL\tWOODS\n"}]},"apps":[],"jobName":"paragraph_1526391457604_-207971312","id":"20180409-124734_1577951246","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52477"},{"title":"Poisonous/Edible Mushroom Distribution","text":"%sql\n\nselect Label, count(Label) from RawMushData group by Label","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Label\tcount(Label)\nEDIBLE\t4488\nPOISONOUS\t3928\n"}]},"apps":[],"jobName":"paragraph_1526391457604_-207971312","id":"20180409-124808_580863699","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52478"},{"title":"Odor By Poisonous/Edible","text":"%sql\n\nselect Label, Odor, count(Odor) from RawMushData group by Odor, Label","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"scatterChart":{"xAxis":{"name":"Label","index":0,"aggr":"sum"},"yAxis":{"name":"Odor","index":1,"aggr":"sum"},"group":{"name":"Odor","index":1,"aggr":"sum"}},"multiBarChart":{"stacked":true},"pieChart":{}},"commonSetting":{},"keys":[{"name":"Odor","index":1,"aggr":"sum"}],"groups":[{"name":"Label","index":0,"aggr":"sum"}],"values":[{"name":"count(Odor)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Label\tOdor\tcount(Odor)\nPOISONOUS\tFISHY\t576\nPOISONOUS\tNONE\t120\nEDIBLE\tANISE\t400\nPOISONOUS\tPUNGENT\t256\nEDIBLE\tNONE\t3688\nEDIBLE\tALMOND\t400\nPOISONOUS\tCREOSOTE\t192\nPOISONOUS\tFOUL\t2160\nPOISONOUS\tSPICY\t576\nPOISONOUS\tMUSTY\t48\n"}]},"apps":[],"jobName":"paragraph_1526391457605_-208356061","id":"20180409-130529_129636148","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52479"},{"title":"Gill Color By Poisonous/Edible","text":"%sql\n\nselect Label, GillColor, count(GillColor) from RawMushData group by GillColor, Label","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":true}},"commonSetting":{},"keys":[{"name":"GillColor","index":1,"aggr":"sum"}],"groups":[{"name":"Label","index":0,"aggr":"sum"}],"values":[{"name":"count(GillColor)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Label\tGillColor\tcount(GillColor)\nPOISONOUS\tGREEN\t24\nEDIBLE\tWHITE\t980\nEDIBLE\tBROWN\t1000\nPOISONOUS\tYELLOW\t28\nEDIBLE\tCHOCOLATE\t268\nPOISONOUS\tGRAY\t504\nEDIBLE\tYELLOW\t64\nEDIBLE\tRED\t96\nEDIBLE\tBLACK\t408\nEDIBLE\tPURPLE\t444\nEDIBLE\tORANGE\t64\nEDIBLE\tPINK\t916\nPOISONOUS\tPURPLE\t48\nPOISONOUS\tCHOCOLATE\t528\nPOISONOUS\tWHITE\t252\nPOISONOUS\tPINK\t640\nPOISONOUS\tBLACK\t64\nEDIBLE\tGRAY\t248\nPOISONOUS\tBUFF\t1728\nPOISONOUS\tBROWN\t112\n"}]},"apps":[],"jobName":"paragraph_1526391457605_-208356061","id":"20180409-130806_691173633","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52480"},{"title":"Spore Print Color By Poisonous/Edible","text":"%sql\n\nselect Label, SporePrintColor, count(SporePrintColor) from RawMushData group by SporePrintColor, Label","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":false,"title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"scatterChart":{"xAxis":{"name":"Label","index":0,"aggr":"sum"},"yAxis":{"name":"Odor","index":1,"aggr":"sum"},"group":{"name":"Odor","index":1,"aggr":"sum"}},"multiBarChart":{"stacked":true},"pieChart":{}},"commonSetting":{},"keys":[{"name":"SporePrintColor","index":1,"aggr":"sum"}],"groups":[{"name":"Label","index":0,"aggr":"sum"}],"values":[{"name":"count(SporePrintColor)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Label\tSporePrintColor\tcount(SporePrintColor)\nPOISONOUS\tGREEN\t72\nEDIBLE\tWHITE\t600\nEDIBLE\tBROWN\t1872\nEDIBLE\tCHOCOLATE\t48\nEDIBLE\tYELLOW\t48\nEDIBLE\tBLACK\t1776\nEDIBLE\tBUFF\t48\nEDIBLE\tPURPLE\t48\nEDIBLE\tORANGE\t48\nPOISONOUS\tCHOCOLATE\t1584\nPOISONOUS\tWHITE\t1824\nPOISONOUS\tBLACK\t224\nPOISONOUS\tBROWN\t224\n"}]},"apps":[],"jobName":"paragraph_1526391457606_-207201814","id":"20180409-125153_878201397","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52481"},{"title":"String to Index the String Columns","text":"%spark\n\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\n\n//Convert Strings to Index Values\n\n// Poison Label\nval indexer1 = new StringIndexer().setInputCol(\"Label\").setOutputCol(\"Label_Index\").fit(df_WholeSetRaw)\nval indexed1 = indexer1.transform(df_WholeSetRaw)\n\n//Cap Shape\nval indexer2 = new StringIndexer().setInputCol(\"CapShape\").setOutputCol(\"CapShape_Index\").fit(indexed1)\nval indexed2 = indexer2.transform(indexed1)\n\n//Cap Surface \nval indexer3 = new StringIndexer().setInputCol(\"CapSurface\").setOutputCol(\"CapSurface_Index\").fit(indexed2)\nval indexed3 = indexer3.transform(indexed2)\n\n//Cap Color\nval indexer4 = new StringIndexer().setInputCol(\"CapColor\").setOutputCol(\"CapColor_Index\").fit(indexed3)\nval indexed4 = indexer4.transform(indexed3)\n\n//Bruises\nval indexer5 = new StringIndexer().setInputCol(\"Bruises\").setOutputCol(\"Bruises_Index\").fit(indexed4)\nval indexed5 = indexer5.transform(indexed4)\n\n//Odor\nval indexer6 = new StringIndexer().setInputCol(\"Odor\").setOutputCol(\"Odor_Index\").fit(indexed5)\nval indexed6 = indexer6.transform(indexed5)\n\n//Gill Attachment\nval indexer7 = new StringIndexer().setInputCol(\"GillAttachment\").setOutputCol(\"GillAttachment_Index\").fit(indexed6)\nval indexed7 = indexer7.transform(indexed6)\n\n//Gill Spacing\nval indexer8 = new StringIndexer().setInputCol(\"GillSpacing\").setOutputCol(\"GillSpacing_Index\").fit(indexed7)\nval indexed8 = indexer8.transform(indexed7)\n\n//Gill Size\nval indexer9 = new StringIndexer().setInputCol(\"GillSize\").setOutputCol(\"GillSize_Index\").fit(indexed8)\nval indexed9 = indexer9.transform(indexed8)\n\n//Gill Color\nval indexer10 = new StringIndexer().setInputCol(\"GillColor\").setOutputCol(\"GillColor_Index\").fit(indexed9)\nval indexed10 = indexer10.transform(indexed9)\n\n//Stalk Shape\nval indexer11 = new StringIndexer().setInputCol(\"StalkShape\").setOutputCol(\"StalkShape_Index\").fit(indexed10)\nval indexed11 = indexer11.transform(indexed10)\n\n//Stalk Root\nval indexer12 = new StringIndexer().setInputCol(\"StalkRoot\").setOutputCol(\"StalkRoot_Index\").fit(indexed11)\nval indexed12 = indexer12.transform(indexed11)\n\n//SSAR\nval indexer13 = new StringIndexer().setInputCol(\"SSAR\").setOutputCol(\"SSAR_Index\").fit(indexed12)\nval indexed13 = indexer13.transform(indexed12)\n\n//SSBR\nval indexer14 = new StringIndexer().setInputCol(\"SSBR\").setOutputCol(\"SSBR_Index\").fit(indexed13)\nval indexed14 = indexer14.transform(indexed13)\n\n//SCAR\nval indexer15 = new StringIndexer().setInputCol(\"SCAR\").setOutputCol(\"SCAR_Index\").fit(indexed14)\nval indexed15 = indexer15.transform(indexed14)\n\n//SCBR\nval indexer16 = new StringIndexer().setInputCol(\"SCBR\").setOutputCol(\"SCBR_Index\").fit(indexed15)\nval indexed16 = indexer16.transform(indexed15)\n\n//Veil Type\nval indexer17 = new StringIndexer().setInputCol(\"VeilType\").setOutputCol(\"VeilType_Index\").fit(indexed16)\nval indexed17 = indexer17.transform(indexed16)\n\n//Veil Color\nval indexer18 = new StringIndexer().setInputCol(\"VeilColor\").setOutputCol(\"VeilColor_Index\").fit(indexed17)\nval indexed18 = indexer18.transform(indexed17)\n\n//Ring Number\nval indexer19 = new StringIndexer().setInputCol(\"RingNumber\").setOutputCol(\"RingNumber_Index\").fit(indexed18)\nval indexed19 = indexer19.transform(indexed18)\n\n//Ring Type\nval indexer20 = new StringIndexer().setInputCol(\"RingType\").setOutputCol(\"RingType_Index\").fit(indexed19)\nval indexed20 = indexer20.transform(indexed19)\n\n//SporePrintColor\nval indexer21 = new StringIndexer().setInputCol(\"SporePrintColor\").setOutputCol(\"SporePrintColor_Index\").fit(indexed20)\nval indexed21 = indexer21.transform(indexed20)\n\n//Population\nval indexer22 = new StringIndexer().setInputCol(\"Population\").setOutputCol(\"Population_Index\").fit(indexed21)\nval indexed22 = indexer22.transform(indexed21)\n\n//Habitat\nval indexer23 = new StringIndexer().setInputCol(\"Habitat\").setOutputCol(\"Habitat_Index\").fit(indexed22)\nval indexed23 = indexer23.transform(indexed22)\n\nval df_CompletedIndex = indexed23\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer}\nindexer1: org.apache.spark.ml.feature.StringIndexerModel = strIdx_9f18ae5adfb7\nindexed1: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 22 more fields]\nindexer2: org.apache.spark.ml.feature.StringIndexerModel = strIdx_a86ff2869279\nindexed2: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 23 more fields]\nindexer3: org.apache.spark.ml.feature.StringIndexerModel = strIdx_0f2a22e9b5ee\nindexed3: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 24 more fields]\nindexer4: org.apache.spark.ml.feature.StringIndexerModel = strIdx_6b08beb00f38\nindexed4: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 25 more fields]\nindexer5: org.apache.spark.ml.feature.StringIndexerModel = strIdx_f3e8013db08f\nindexed5: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 26 more fields]\nindexer6: org.apache.spark.ml.feature.StringIndexerModel = strIdx_a04cda992f15\nindexed6: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 27 more fields]\nindexer7: org.apache.spark.ml.feature.StringIndexerModel = strIdx_4fd8bb81c66c\nindexed7: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 28 more fields]\nindexer8: org.apache.spark.ml.feature.StringIndexerModel = strIdx_61cf7ce62a82\nindexed8: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 29 more fields]\nindexer9: org.apache.spark.ml.feature.StringIndexerModel = strIdx_c3d85e27bba6\nindexed9: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 30 more fields]\nindexer10: org.apache.spark.ml.feature.StringIndexerModel = strIdx_87ea12e019d8\nindexed10: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 31 more fields]\nindexer11: org.apache.spark.ml.feature.StringIndexerModel = strIdx_552d057caf81\nindexed11: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 32 more fields]\nindexer12: org.apache.spark.ml.feature.StringIndexerModel = strIdx_8938ea57d021\nindexed12: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 33 more fields]\nindexer13: org.apache.spark.ml.feature.StringIndexerModel = strIdx_ada13fd2da35\nindexed13: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 34 more fields]\nindexer14: org.apache.spark.ml.feature.StringIndexerModel = strIdx_8165abc21395\nindexed14: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 35 more fields]\nindexer15: org.apache.spark.ml.feature.StringIndexerModel = strIdx_469054d1c8c3\nindexed15: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 36 more fields]\nindexer16: org.apache.spark.ml.feature.StringIndexerModel = strIdx_f123ae0add7f\nindexed16: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 37 more fields]\nindexer17: org.apache.spark.ml.feature.StringIndexerModel = strIdx_1136e37000e6\nindexed17: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 38 more fields]\nindexer18: org.apache.spark.ml.feature.StringIndexerModel = strIdx_69bee89f37f9\nindexed18: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 39 more fields]\nindexer19: org.apache.spark.ml.feature.StringIndexerModel = strIdx_503f7ad9f0f5\nindexed19: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 40 more fields]\nindexer20: org.apache.spark.ml.feature.StringIndexerModel = strIdx_d1783c9d2eaf\nindexed20: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 41 more fields]\nindexer21: org.apache.spark.ml.feature.StringIndexerModel = strIdx_6a0bced2bdc6\nindexed21: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 42 more fields]\nindexer22: org.apache.spark.ml.feature.StringIndexerModel = strIdx_4507508e6ef8\nindexed22: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 43 more fields]\nindexer23: org.apache.spark.ml.feature.StringIndexerModel = strIdx_0a2c15e0d8c9\nindexed23: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 44 more fields]\ndf_CompletedIndex: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 44 more fields]\n"}]},"apps":[],"jobName":"paragraph_1526391457606_-207201814","id":"20180409-125046_437804174","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52482"},{"title":"Create Vector for Extracted Features","text":"%spark\nimport org.apache.spark.mllib.linalg.Vectors \nimport org.apache.spark.ml.feature.VectorAssembler\n\n//df_CompletedIndex.printSchema()\n\n//Assemble the Feature Vector from extacted features values\nval assembler = new VectorAssembler().setInputCols(Array(\"CapShape_Index\", \"CapSurface_Index\", \"CapColor_Index\", \"Bruises_Index\",\"Odor_Index\", \"GillAttachment_Index\", \"GillSpacing_Index\", \"GillSize_Index\", \"GillColor_Index\", \"StalkShape_Index\", \"StalkRoot_Index\", \"SSAR_Index\", \"SSBR_Index\", \"SCAR_Index\", \"SCBR_Index\", \"VeilType_Index\", \"VeilColor_Index\", \"RingNumber_Index\", \"RingType_Index\", \"SporePrintColor_Index\", \"Population_Index\", \"Habitat_Index\")).setOutputCol(\"features\")\n\n//Create Feature Vector\nval FeatureVector = assembler.transform(df_CompletedIndex)\n\n//Display results\nFeatureVector.take(2)\n\n//Create Feature List\nval featureList = Array(\"CapShape_Index\", \"CapSurface_Index\", \"CapColor_Index\", \"Bruises_Index\",\"Odor_Index\", \"GillAttachment_Index\", \"GillSpacing_Index\", \"GillSize_Index\", \"GillColor_Index\", \"StalkShape_Index\", \"StalkRoot_Index\", \"SSAR_Index\", \"SSBR_Index\", \"SCAR_Index\", \"SCBR_Index\", \"VeilType_Index\", \"VeilColor_Index\", \"RingNumber_Index\", \"RingType_Index\", \"SporePrintColor_Index\", \"Population_Index\", \"Habitat_Index\")\n\nFeatureVector.printSchema()\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.mllib.linalg.Vectors\nimport org.apache.spark.ml.feature.VectorAssembler\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_6e0f118eea5e\nFeatureVector: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 45 more fields]\nres69: Array[org.apache.spark.sql.Row] = Array([EDIBLE,CONVEX,SMOOTH,WHITE,BRUISES,ALMOND,FREE,CROWDED,NARROW,WHITE,TAPERING,BULBOUS,SMOOTH,SMOOTH,WHITE,WHITE,PARTIAL,WHITE,ONE,PENDANT,PURPLE,SEVERAL,WOODS,0.0,0.0,1.0,4.0,1.0,4.0,0.0,1.0,1.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,8.0,0.0,0.0,(22,[1,2,3,4,6,7,8,19],[1.0,4.0,1.0,4.0,1.0,1.0,2.0,8.0])], [EDIBLE,CONVEX,SMOOTH,WHITE,BRUISES,ALMOND,FREE,CROWDED,NARROW,WHITE,TAPERING,BULBOUS,SMOOTH,SMOOTH,WHITE,WHITE,PARTIAL,WHITE,ONE,PENDANT,BROWN,SEVERAL,WOODS,0.0,0.0,1.0,4.0,1.0,4.0,0.0,1.0,1.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,(22,[1,2,3,4,6,7,8,19],[1.0,4.0,1.0,4.0,1.0,1.0,2.0,1.0])])\nfeatureList: Array[String] = Array(CapShape_Index, CapSurface_Index, CapColor_Index, Bruises_Index, Odor_Index, GillAttachment_Index, GillSpacing_Index, GillSize_Index, GillColor_Index, StalkShape_Index, StalkRoot_Index, SSAR_Index, SSBR_Index, SCAR_Index, SCBR_Index, VeilType_Index, VeilColor_Index, RingNumber_Index, RingType_Index, SporePrintColor_Index, Population_Index, Habitat_Index)\nroot\n |-- Label: string (nullable = true)\n |-- CapShape: string (nullable = true)\n |-- CapSurface: string (nullable = true)\n |-- CapColor: string (nullable = true)\n |-- Bruises: string (nullable = true)\n |-- Odor: string (nullable = true)\n |-- GillAttachment: string (nullable = true)\n |-- GillSpacing: string (nullable = true)\n |-- GillSize: string (nullable = true)\n |-- GillColor: string (nullable = true)\n |-- StalkShape: string (nullable = true)\n |-- StalkRoot: string (nullable = true)\n |-- SSAR: string (nullable = true)\n |-- SSBR: string (nullable = true)\n |-- SCAR: string (nullable = true)\n |-- SCBR: string (nullable = true)\n |-- VeilType: string (nullable = true)\n |-- VeilColor: string (nullable = true)\n |-- RingNumber: string (nullable = true)\n |-- RingType: string (nullable = true)\n |-- SporePrintColor: string (nullable = true)\n |-- Population: string (nullable = true)\n |-- Habitat: string (nullable = true)\n |-- Label_Index: double (nullable = true)\n |-- CapShape_Index: double (nullable = true)\n |-- CapSurface_Index: double (nullable = true)\n |-- CapColor_Index: double (nullable = true)\n |-- Bruises_Index: double (nullable = true)\n |-- Odor_Index: double (nullable = true)\n |-- GillAttachment_Index: double (nullable = true)\n |-- GillSpacing_Index: double (nullable = true)\n |-- GillSize_Index: double (nullable = true)\n |-- GillColor_Index: double (nullable = true)\n |-- StalkShape_Index: double (nullable = true)\n |-- StalkRoot_Index: double (nullable = true)\n |-- SSAR_Index: double (nullable = true)\n |-- SSBR_Index: double (nullable = true)\n |-- SCAR_Index: double (nullable = true)\n |-- SCBR_Index: double (nullable = true)\n |-- VeilType_Index: double (nullable = true)\n |-- VeilColor_Index: double (nullable = true)\n |-- RingNumber_Index: double (nullable = true)\n |-- RingType_Index: double (nullable = true)\n |-- SporePrintColor_Index: double (nullable = true)\n |-- Population_Index: double (nullable = true)\n |-- Habitat_Index: double (nullable = true)\n |-- features: vector (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1526391457607_-207586563","id":"20180409-134424_2021300279","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52483"},{"title":"Create Test and Train Sets","text":"%spark\nimport org.apache.spark.ml.feature.{IndexToString, StringIndexer}\n\nval splits = FeatureVector.randomSplit(Array(0.8, 0.2))\nval df_TrainSet = splits(0)\nval df_TestSet = splits(1)\n\ndf_TrainSet.printSchema()\n\nval converter = new IndexToString()\n  .setInputCol(\"Label_Index\")\n  .setOutputCol(\"originalLabel\")\n\nval converted = converter.transform(df_TrainSet)\n\nconverted.take(1)\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.feature.{IndexToString, StringIndexer}\nsplits: Array[org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]] = Array([Label: string, CapShape: string ... 45 more fields], [Label: string, CapShape: string ... 45 more fields])\ndf_TrainSet: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Label: string, CapShape: string ... 45 more fields]\ndf_TestSet: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [Label: string, CapShape: string ... 45 more fields]\nroot\n |-- Label: string (nullable = true)\n |-- CapShape: string (nullable = true)\n |-- CapSurface: string (nullable = true)\n |-- CapColor: string (nullable = true)\n |-- Bruises: string (nullable = true)\n |-- Odor: string (nullable = true)\n |-- GillAttachment: string (nullable = true)\n |-- GillSpacing: string (nullable = true)\n |-- GillSize: string (nullable = true)\n |-- GillColor: string (nullable = true)\n |-- StalkShape: string (nullable = true)\n |-- StalkRoot: string (nullable = true)\n |-- SSAR: string (nullable = true)\n |-- SSBR: string (nullable = true)\n |-- SCAR: string (nullable = true)\n |-- SCBR: string (nullable = true)\n |-- VeilType: string (nullable = true)\n |-- VeilColor: string (nullable = true)\n |-- RingNumber: string (nullable = true)\n |-- RingType: string (nullable = true)\n |-- SporePrintColor: string (nullable = true)\n |-- Population: string (nullable = true)\n |-- Habitat: string (nullable = true)\n |-- Label_Index: double (nullable = true)\n |-- CapShape_Index: double (nullable = true)\n |-- CapSurface_Index: double (nullable = true)\n |-- CapColor_Index: double (nullable = true)\n |-- Bruises_Index: double (nullable = true)\n |-- Odor_Index: double (nullable = true)\n |-- GillAttachment_Index: double (nullable = true)\n |-- GillSpacing_Index: double (nullable = true)\n |-- GillSize_Index: double (nullable = true)\n |-- GillColor_Index: double (nullable = true)\n |-- StalkShape_Index: double (nullable = true)\n |-- StalkRoot_Index: double (nullable = true)\n |-- SSAR_Index: double (nullable = true)\n |-- SSBR_Index: double (nullable = true)\n |-- SCAR_Index: double (nullable = true)\n |-- SCBR_Index: double (nullable = true)\n |-- VeilType_Index: double (nullable = true)\n |-- VeilColor_Index: double (nullable = true)\n |-- RingNumber_Index: double (nullable = true)\n |-- RingType_Index: double (nullable = true)\n |-- SporePrintColor_Index: double (nullable = true)\n |-- Population_Index: double (nullable = true)\n |-- Habitat_Index: double (nullable = true)\n |-- features: vector (nullable = true)\n\nconverter: org.apache.spark.ml.feature.IndexToString = idxToStr_4060daec08b5\nconverted: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 46 more fields]\nres80: Array[org.apache.spark.sql.Row] = Array([EDIBLE,BELL,FIBROUS,GRAY,NO,NONE,FREE,CROWDED,BROAD,GRAY,ENLARGING,?,SILKY,SILKY,WHITE,WHITE,PARTIAL,WHITE,TWO,PENDANT,WHITE,NUMEROUS,GRASSES,0.0,3.0,2.0,1.0,0.0,0.0,0.0,1.0,0.0,5.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,4.0,1.0,(22,[0,1,2,6,8,9,10,11,12,17,20,21],[3.0,2.0,1.0,1.0,5.0,1.0,1.0,1.0,1.0,1.0,4.0,1.0]),EDIBLE])\n"}]},"apps":[],"jobName":"paragraph_1526391457607_-207586563","id":"20180409-134711_846818220","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52484"},{"title":"Train and Run Random Forest Model","text":"%spark\n\nimport org.apache.spark.ml.classification.RandomForestClassificationModel\nimport org.apache.spark.ml.classification.RandomForestClassifier\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}\nimport org.apache.spark.ml.feature.VectorSlicer\n\n// Train a RandomForest model.\nval rf_classifier = new RandomForestClassifier()\n        .setLabelCol(\"Label_Index\")\n        .setFeaturesCol(\"features\")\n        .setNumTrees(150)\n        .setMaxBins(200)\n        //.setThresholds(Array(0.45,0.75,0.55,0.55,0.55,0.55,0.55,0.55,0.55,0.55))\n        \n//Set up Evalution for Cross-Validation \n//val metric = \"accuracy\"\nval CV_evaluator = new BinaryClassificationEvaluator()\n  .setLabelCol(\"Label_Index\")\n  .setRawPredictionCol(\"prediction\")\n//  .setMetricName(metric)\n\n//Set up grid search for model parameters \nval paramGrid = new ParamGridBuilder()\n    .addGrid(rf_classifier.numTrees, Array(50, 150, 350))\n    .build()\n\nval cv = new CrossValidator()\n  .setEstimator(rf_classifier)\n  .setEvaluator(CV_evaluator) \n  .setEstimatorParamMaps(paramGrid)\n  .setNumFolds(3)        \n        \n// Train model\nval model = cv.fit(df_TrainSet)\n\n// Make predictions for Model Evaluation\nval Predictions = model.transform(df_TestSet)\n\nval Results = Predictions.select(\"Label\",\"Label_Index\",\"prediction\",\"CapShape\", \"CapSurface\", \"CapColor\", \"Bruises\",\"Odor\", \"GillAttachment\", \"GillSpacing\", \"GillSize\", \"GillColor\", \"StalkShape\", \"StalkRoot\", \"SSAR\", \"SSBR\", \"SCAR\", \"SCBR\", \"VeilType\", \"VeilColor\", \"RingNumber\", \"RingType\", \"SporePrintColor\", \"Population\", \"Habitat\")\n\n// Select example rows to display.\nResults.createOrReplaceTempView(\"MushResults\")","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.classification.RandomForestClassificationModel\nimport org.apache.spark.ml.classification.RandomForestClassifier\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}\nimport org.apache.spark.ml.feature.VectorSlicer\nrf_classifier: org.apache.spark.ml.classification.RandomForestClassifier = rfc_a6590f2f964d\nCV_evaluator: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_64d8ba86c637\nparamGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\trfc_a6590f2f964d-numTrees: 50\n}, {\n\trfc_a6590f2f964d-numTrees: 150\n}, {\n\trfc_a6590f2f964d-numTrees: 350\n})\ncv: org.apache.spark.ml.tuning.CrossValidator = cv_813776f91a74\nmodel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_813776f91a74\nPredictions: org.apache.spark.sql.DataFrame = [Label: string, CapShape: string ... 48 more fields]\nResults: org.apache.spark.sql.DataFrame = [Label: string, Label_Index: double ... 23 more fields]\n"}]},"apps":[],"jobName":"paragraph_1526391457608_-209510308","id":"20180409-140159_807737511","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52485"},{"title":"Random Forest Model Evaluation","text":"%spark\nimport org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\nimport org.apache.spark.mllib.regression.LabeledPoint \n\nval metrics = new BinaryClassificationEvaluator()\n  .setLabelCol(\"Label_Index\")\n  .setRawPredictionCol(\"prediction\")\n  .setMetricName(\"areaUnderROC\")\nval areaUnderROC = metrics.evaluate(Predictions)\nprintln(\"Area Under ROC = \" + areaUnderROC)\n\nval metrics = new BinaryClassificationEvaluator()\n  .setLabelCol(\"Label_Index\")\n  .setRawPredictionCol(\"prediction\")\n  .setMetricName(\"areaUnderPR\")\nval areaUnderPRC = metrics.evaluate(Predictions)\nprintln(\"Area Under PRC = \" + areaUnderPRC)\n\nval df_LabeledSet = Results.select(\"prediction\", \"Label_Index\").rdd\n\nval predictionAndLabels =  df_LabeledSet.map { row => (row(0).asInstanceOf[Double], row(1).asInstanceOf[Double])} \n\n//predictionAndLabels.count()\n\n// Instantiate metrics object\nval metrics = new BinaryClassificationMetrics(predictionAndLabels )\n\n// Precision by threshold\nval precision = metrics.precisionByThreshold.collect()\n\nprecision.foreach { case (t, p) =>\n  println(s\"Threshold: $t, Precision: $p\")\n}\n\n// Recall by threshold\nval recall = metrics.recallByThreshold.collect()\n\nrecall.foreach { case (t, r) =>\n  println(s\"Threshold: $t, Recall: $r\")\n}\n\n// Precision-Recall Curve\nval PRC = metrics.pr.collect()\n\n// F-measure\nval f1Score = metrics.fMeasureByThreshold.collect()\n\nf1Score.foreach { case (t, f) =>\n  println(s\"Threshold: $t, F-score: $f, Beta = 1\")\n}\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.mllib.evaluation.BinaryClassificationMetrics\nimport org.apache.spark.mllib.regression.LabeledPoint\nmetrics: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_a9ff39efa668\nareaUnderROC: Double = 0.9986876640419948\nArea Under ROC = 0.9986876640419948\nmetrics: org.apache.spark.ml.evaluation.BinaryClassificationEvaluator = binEval_011ddcf863ea\nareaUnderPRC: Double = 0.9993030486573794\nArea Under PRC = 0.9993030486573794\ndf_LabeledSet: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[723] at rdd at <console>:170\npredictionAndLabels: org.apache.spark.rdd.RDD[(Double, Double)] = MapPartitionsRDD[724] at map at <console>:172\nmetrics: org.apache.spark.mllib.evaluation.BinaryClassificationMetrics = org.apache.spark.mllib.evaluation.BinaryClassificationMetrics@67eea0d7\nprecision: Array[(Double, Double)] = Array((1.0,1.0), (0.0,0.46892307692307694))\nThreshold: 1.0, Precision: 1.0\nThreshold: 0.0, Precision: 0.46892307692307694\nrecall: Array[(Double, Double)] = Array((1.0,0.9973753280839895), (0.0,1.0))\nThreshold: 1.0, Recall: 0.9973753280839895\nThreshold: 0.0, Recall: 1.0\nPRC: Array[(Double, Double)] = Array((0.0,1.0), (0.9973753280839895,1.0), (1.0,0.46892307692307694))\nf1Score: Array[(Double, Double)] = Array((1.0,0.9986859395532194), (0.0,0.6384583158776707))\nThreshold: 1.0, F-score: 0.9986859395532194, Beta = 1\nThreshold: 0.0, F-score: 0.6384583158776707, Beta = 1\n"}]},"apps":[],"jobName":"paragraph_1526391457608_-209510308","id":"20180409-145829_6825321","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52486"},{"title":"Random Forest - Feature Ranking","text":"%spark\n\nval rf_model = rf_classifier.fit(df_TestSet)\n\nval features = df_TestSet.select(\"features\")\n\nval featureImp = rf_model.featureImportances\n\nfeatureImp.toArray.zip(featureList).map(_.swap).sortBy(-_._2).foreach(x => println(x._1 + \" -> \" + x._2))\n\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rf_model: org.apache.spark.ml.classification.RandomForestClassificationModel = RandomForestClassificationModel (uid=rfc_431267a4fb00) with 150 trees\nfeatures: org.apache.spark.sql.DataFrame = [features: vector]\nfeatureImp: org.apache.spark.ml.linalg.Vector = (22,[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21],[0.002115116764186346,0.005299389063914211,0.011784915306013881,0.013287318339387321,0.2977802373511625,8.100957051596874E-4,0.01750955500296439,0.07046298517879498,0.08606677141914064,0.015941362043129906,0.03595796707405483,0.08747282656356041,0.05980086929866719,0.005725429425423214,0.010010484874481515,0.0011313064015695982,0.015476836693263243,0.036410282787002785,0.16835333443544745,0.03215795327539819,0.02644496299727767])\nOdor_Index -> 0.2977802373511625\nSporePrintColor_Index -> 0.16835333443544745\nSSAR_Index -> 0.08747282656356041\nGillColor_Index -> 0.08606677141914064\nGillSize_Index -> 0.07046298517879498\nSSBR_Index -> 0.05980086929866719\nRingType_Index -> 0.036410282787002785\nStalkRoot_Index -> 0.03595796707405483\nPopulation_Index -> 0.03215795327539819\nHabitat_Index -> 0.02644496299727767\nGillSpacing_Index -> 0.01750955500296439\nStalkShape_Index -> 0.015941362043129906\nRingNumber_Index -> 0.015476836693263243\nBruises_Index -> 0.013287318339387321\nCapColor_Index -> 0.011784915306013881\nSCBR_Index -> 0.010010484874481515\nSCAR_Index -> 0.005725429425423214\nCapSurface_Index -> 0.005299389063914211\nCapShape_Index -> 0.002115116764186346\nVeilColor_Index -> 0.0011313064015695982\nGillAttachment_Index -> 8.100957051596874E-4\nVeilType_Index -> 0.0\n"}]},"apps":[],"jobName":"paragraph_1526391457609_-209895057","id":"20180409-150438_1067399204","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52487"},{"title":"Validate Results","text":"%sql \n\nselect * from MushResults limit 10 \n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Label\tLabel_Index\tprediction\tCapShape\tCapSurface\tCapColor\tBruises\tOdor\tGillAttachment\tGillSpacing\tGillSize\tGillColor\tStalkShape\tStalkRoot\tSSAR\tSSBR\tSCAR\tSCBR\tVeilType\tVeilColor\tRingNumber\tRingType\tSporePrintColor\tPopulation\tHabitat\nEDIBLE\t0.0\t0.0\tBELL\tFIBROUS\tGRAY\tNO\tNONE\tFREE\tCROWDED\tBROAD\tGRAY\tENLARGING\t?\tSILKY\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tTWO\tPENDANT\tWHITE\tSCATTERED\tGRASSES\nEDIBLE\t0.0\t0.0\tBELL\tFIBROUS\tWHITE\tNO\tNONE\tFREE\tCROWDED\tBROAD\tGRAY\tENLARGING\t?\tSILKY\tSILKY\tWHITE\tWHITE\tPARTIAL\tWHITE\tTWO\tPENDANT\tWHITE\tNUMEROUS\tGRASSES\nEDIBLE\t0.0\t0.0\tBELL\tFIBROUS\tWHITE\tNO\tNONE\tFREE\tCROWDED\tBROAD\tGRAY\tENLARGING\t?\tSILKY\tSILKY\tWHITE\tWHITE\tPARTIAL\tWHITE\tTWO\tPENDANT\tWHITE\tSCATTERED\tGRASSES\nEDIBLE\t0.0\t0.0\tBELL\tFIBROUS\tWHITE\tNO\tNONE\tFREE\tCROWDED\tBROAD\tPINK\tENLARGING\t?\tSMOOTH\tSILKY\tWHITE\tWHITE\tPARTIAL\tWHITE\tTWO\tPENDANT\tWHITE\tNUMEROUS\tGRASSES\nEDIBLE\t0.0\t0.0\tBELL\tFIBROUS\tWHITE\tNO\tNONE\tFREE\tCROWDED\tBROAD\tWHITE\tENLARGING\t?\tSILKY\tSILKY\tWHITE\tWHITE\tPARTIAL\tWHITE\tTWO\tPENDANT\tWHITE\tNUMEROUS\tGRASSES\nEDIBLE\t0.0\t0.0\tBELL\tSCALY\tBROWN\tNO\tNONE\tFREE\tCLOSE\tBROAD\tWHITE\tENLARGING\tBULBOUS\tSCALY\tSCALY\tBROWN\tBROWN\tPARTIAL\tWHITE\tTWO\tPENDANT\tWHITE\tSOLITARY\tWOODS\nEDIBLE\t0.0\t0.0\tBELL\tSCALY\tWHITE\tBRUISES\tALMOND\tFREE\tCLOSE\tBROAD\tBLACK\tENLARGING\tCLUB\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBLACK\tNUMEROUS\tGRASSES\nEDIBLE\t0.0\t0.0\tBELL\tSCALY\tWHITE\tBRUISES\tALMOND\tFREE\tCLOSE\tBROAD\tBROWN\tENLARGING\tCLUB\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBLACK\tNUMEROUS\tMEADOWS\nEDIBLE\t0.0\t0.0\tBELL\tSCALY\tWHITE\tBRUISES\tALMOND\tFREE\tCLOSE\tBROAD\tBROWN\tENLARGING\tCLUB\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBROWN\tSCATTERED\tGRASSES\nEDIBLE\t0.0\t0.0\tBELL\tSCALY\tWHITE\tBRUISES\tALMOND\tFREE\tCLOSE\tBROAD\tGRAY\tENLARGING\tCLUB\tSMOOTH\tSMOOTH\tWHITE\tWHITE\tPARTIAL\tWHITE\tONE\tPENDANT\tBLACK\tSCATTERED\tGRASSES\n"}]},"apps":[],"jobName":"paragraph_1526391457609_-209895057","id":"20180410-063709_1893215056","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52488"},{"title":"Confusion Matrix Via SQL","text":"%sql \n\nselect label, prediction, count(prediction) from MushResults where  group by label, prediction\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"label\tprediction\tcount(prediction)\nEDIBLE\t0.0\t863\nPOISONOUS\t0.0\t2\nPOISONOUS\t1.0\t760\n"}]},"apps":[],"jobName":"paragraph_1526391457610_-208740810","id":"20180410-121159_1837585684","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52489"},{"text":"%spark\n","dateUpdated":"2018-05-15T09:37:37-0400","config":{"colWidth":12,"editorMode":"ace/mode/text","results":{},"enabled":true,"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1526391457610_-208740810","id":"20180413-090409_362763940","dateCreated":"2018-05-15T09:37:37-0400","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:52490"}],"name":"MushroomsClassifier - Scala - DSX","id":"2DGC6AC86","angularObjects":{"2D7UB5DWN:shared_process":[],"2D77X3KB6:shared_process":[],"2D78CY7V1:shared_process":[],"2D9TR66MS:shared_process":[],"2D8A6P2VJ:shared_process":[],"2D763B6N4:shared_process":[],"2D8XDFXUS:shared_process":[],"2D9YUB6X9:shared_process":[],"2D89XEJVA:shared_process":[],"2D9TNV8XZ:shared_process":[],"2D9HGKTCK:shared_process":[],"2D9ECNFF2:shared_process":[],"2D6CZP8YB:shared_process":[],"2D92BFGM4:shared_process":[],"2D9KC5YRP:shared_process":[],"2D99TYCWV:shared_process":[],"2D8DWKU88:shared_process":[],"2D7YQZDKH:shared_process":[],"2D9TZV2HZ:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}